services:
  postgres:
    image: postgres:15-alpine
    container_name: podcast-postgres
    restart: unless-stopped
    env_file:
      - ../../.env.shared
    volumes:
      - podcast_pgdata:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5435:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d podcast_app -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    networks:
      - podcast_network

  redis:
    image: redis:7-alpine
    container_name: podcast-redis
    restart: unless-stopped
    env_file:
      - ../../.env.shared
    ports:
      - "6390:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - podcast_network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    container_name: podcast-zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD", "bash", "-c", "echo ruok | nc localhost 2181 | grep imok"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - podcast_network

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    container_name: podcast-kafka
    restart: unless-stopped
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    ports:
      - "9092:9092"
    healthcheck:
      test: ["CMD", "bash", "-c", "kafka-broker-api-versions --bootstrap-server localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - podcast_network

  minio:
    image: minio/minio:RELEASE.2024-09-22T00-33-43Z
    container_name: podcast-minio
    restart: unless-stopped
    env_file:
      - ../../.env.shared
    command: server /data --console-address ":9101"
    ports:
      - "9100:9000"
      - "9101:9101"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000/minio/health/live || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
    volumes:
      - podcast_minio:/data
    networks:
      - podcast_network

volumes:
  podcast_pgdata:
  podcast_minio:

networks:
  podcast_network:
    driver: bridge
